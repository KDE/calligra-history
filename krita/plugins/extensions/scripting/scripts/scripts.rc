<!DOCTYPE KrossScripting SYSTEM "kpartgui.dtd">
<KrossScripting>

	<script text="Python Imaging Library Import" comment="Import images with the Python Imaging Library (PIL)" 
		name="pilimport"
		interpreter="python"
		file="extensions/pilimport.py" />

  <script text="Draw a sky" comment="Draw a sky"
    name="rbsky"
    interpreter="ruby"
    file="extensions/sky.rb" />
  
	<script text="Python Imaging Library Export" comment="Export images with the Python Imaging Library (PIL)"

		name="pilexport"
		interpreter="python"
		file="extensions/pilexport.py" />

    <collection name="samples" text="Samples">

		<script text="Invert with Ruby" comment="Invert the pixels of an image with Ruby"
			name="rbinvert"
			interpreter="ruby"
			file="extensions/invert.rb" />

		<script text="Invert with Python" comment="Invert the pixels of an image with Python" 
			name="pyinvert"
			interpreter="python"
			file="extensions/invert.py" />

		<script text="Invert with JavaScript" comment="Invert the pixels of an image with JavaScript"
			name="jsinvert"
			interpreter="javascript"
			file="extensions/invert.js" />

		<script text="Random painting" comment="Demonstrates how to use the Painter scripting API to paint random shapes on screen" 
			name="rbrandompaint"
			interpreter="ruby"
			file="extensions/randompaint.rb" />

		<script text="Filters test" comment="Test of filters in a ruby script"
			name="rbfilterstest"
			interpreter="ruby"
			file="extensions/filterstest.rb" />

		<script text="Change colorspace" comment="Demonstrates how to change the colorspace in a script"
			name="rbchangecs"
			interpreter="ruby"
			file="extensions/changecs.rb" />

		<script text="Reshape Histogram" comment="An experimental script to try to reshape the histogram.  While the results are yet to be convincing, it is still an example of how to use the histogram in a script."
			name="pyreshapehisto"
			interpreter="python"
			file="extensions/reshapehisto.py" />

		<script text="Torture Krita with painting" comment="Paint on an image and create multiple layers"
			name="rbtorturepainting"
			interpreter="ruby"
			file="extensions/torture-painting.rb" />

		<script text="Torture Krita with filters" comment="Test all filters with all colorspaces"
			name="rbtorturefilters"
			interpreter="ruby"
			file="extensions/torture-filters.rb" />

	</collection>
    <collection name="filters" text="Filters" comment="Scripting filters for Krita" enabled="false">
        <script text="Invert Filter with Ruby" comment="Invert the pixels of an image with Ruby as a filter" 
            name="rbinvertfilter"
            interpreter="ruby"
            file="filters/invert.rb">
            <property name="categoryId">adjust_filters</property>
            <property name="categoryName">Adjust</property>
            <property name="supportsPainting">false</property>
        </script>
        <script text="Random" comment="Generate a completely random image" 
            name="rbrandomfilter"
            interpreter="ruby"
            file="filters/random.rb">
            <property name="categoryId">other_filters</property>
            <property name="categoryName">Other</property>
            <property name="supportsPainting">true</property>
        </script>
    </collection>

    <collection name="dockers" text="Dockers" comment="Dockers for Krita" enabled="true">
<!--        <script text="Palette Docker" comment="Show a palette docker"
            name="Palette Docker"
            interpreter="ruby"
            file="dockers/palettedocker.rb">
            <property name="defaultDockPosition">Qt::DockBottom</property>
        </script>
        <script text="Flipbook Docker" comment="Show the flipbook docker"
            name="Flipbook Docker"
            interpreter="ruby"
            file="dockers/flipbookdocker.rb">
            <property name="defaultDockPosition">Qt::DockRight</property>
        </script>-->
    </collection>
    <collection name="decorations" text="Canvas decorations" comment="Decorations for the canvas of Krita" enabled="true">
<!--        <script text="Vanishing Point Decoration" comment="Show some vanishing points"
            name="VanishingPointDecoration"
            interpreter="ruby"
            file="decorations/VanishingPoints.rb" /> -->
    </collection>
</KrossScripting>
